<html>
<head><title>Topic 10 - Data conversion - Audio transcript </title></head>
<body bgcolor="#FFCC66">

<font face="Arial,Helvetica">

<H1>MQ83 - Topic 10: Data conversion</h1>

<FONT SIZE="+2">What is the problem?</FONT>
<br>
A travel agent enters the hotel requirements of a customer into the agency’s hotel reservation system.<br>
The application packages the details of the requirements into a message and sends it to the room reservation system of the selected hotel.<br>
The hotel reservation clerk looks at the request but detects that something is wrong. The name of the customer is not decipherable and the request for 768 rooms cannot be taken seriously.
<P>
The problem is that the two systems use different representations for numeric and character data. But what does this actually mean?
<br><br><br>


<FONT SIZE="+2">MQSeries and data conversion</FONT>
<br>
Data conversion is required whenever a message is moved from one system to another and the two systems use different representations for character and numeric data.<br>
MQSeries automatically converts the character and numeric data in the message descriptor that accompanies a message.<br>
It does not automatically convert the application data in the message - that is an application responsibility.<br>
The remainder of this topic is concerned with application data conversion and the support that MQSeries provides for this task.
<br><br><br>

<FONT SIZE="+2">Sending a message</FONT>
<br>
Application data conversion never takes place when a message is put on a queue. However, it is the responsibility of the sending application to ensure that the message descriptor that accompanies a message contains the correct information to enable the conversion to be done later, if it is necessary.
<P>
There are three fields in the message descriptor that control application data conversion. Here are the names of these fields. Click each field in turn for an explanation of its meaning and how it should be set by an application before issuing an MQPUT call.
<br><br><br>

<FONT SIZE="+2">Receiving a message</FONT>
<br>
The preferred approach is to request application data conversion when a message is retrieved by an application from its destination queue. However, conversion does not take place automatically. It has to be requested by using the get message option MQGMO_CONVERT on the MQGET call that retrieves the message.
<P>
If an application is retrieving messages from a queue and the application data in the messages may require conversion, the application should issue three statements before issuing an MQGET call that retrieves a message.
<P>
These statements are shown here.
<P>
Click each line of pseudo-code to read a commentary on what the code does.
<br><br><br>


<FONT SIZE="+2">Receiving a message</FONT>
<br>
When the application issues the MQGET call, the queue manager retrieves the next message from the queue and inspects the values of the <I>Encoding</I> and <I>CodedCharSetId</I> fields in its message descriptor. <br>
It then compares these values with those of the corresponding input fields on the MQGET call. Is data conversion necessary in the example shown?
<br><br><br>



<FONT SIZE="+2">Receiving a message</FONT>
<br>
If conversion is necessary, the queue manager inspects the value of the <I>Format</I> field in the message descriptor accompanying the message.<br>
For this example, answer the following questions.
<br><br><br>


<FONT SIZE="+2">Receiving a message</FONT>
<br>
If its value is the name of a built-in format, the queue manager passes the application data in the message to the appropriate built-in conversion routine for conversion. After conversion, the message is returned to the application.
<br><br><br>



<FONT SIZE="+2">Receiving a message</FONT>
<br>
The values of the <I>Encoding</I> and <I>CodedCharSetId</I> fields in the message descriptor accompanying the message specify the numeric and character representations used in the application data before conversion. <br>
These were set on the MQPUT call that created the message.
Conversely, the values of the corresponding input fields on the MQGET call specify the numeric and character representations to which the application data is to be converted. <br>
A built-in conversion routine, or a user written data conversion exit, uses both sets of information in order to perform the conversion.
<P>
If the MQGMO_CONVERT option is specified on an MQGET call, the <I>Encoding</I> and <I>CodedCharSetId</I> fields are both input and output fields. <br>
If conversion was successful or unnecessary, the values of both fields remain unchanged, except that the value of MQCCSI_Q_MGR for the latter field is changed to the value set by the queue manager or the MQSeries client support code. <br>
If conversion was unsuccessful, the output values of these fields specify the numeric and character representations of the unconverted application data.
<P>
On an MQGET call, the Format field is an output field only. It contains the format name as set by the sending application and which accompanied the message.
<br><br><br>


<FONT SIZE="+2">Conversion requested by a sending MCA</FONT>
<br>
Application data conversion can also be requested by a sending MCA when it retrieves a message from a transmission queue in order to move it to another queue manager. <br>
Again, conversion does not take place automatically - it has to be configured by an MQSeries system administrator.
<P>
In this approach, no application is involved in initiating conversion.
The movement of messages from one queue manager to another takes place asynchronously with respect to application execution.
However, an application that creates a message must still ensure that the <I>Encoding</I>, <I>CodedCharSetId</I>, and <I>Format</I> fields are set correctly for conversion to be successful. <br>
Again, a built-in conversion routine or a user written data conversion exit performs  the conversion.
<P>
If the conversion of the message is successful, the MCA sends it to its partner MCA.
<P>
If  the conversion of a message is unsuccessful, the MCA puts the message on its local dead letter queue and sends an exception report to the specified reply-to queue if one had been requested.
This is another circumstance when a message may be put on a dead letter queue.
<br><br><br>


<FONT SIZE="+2">Summary 1 of 2</FONT>
<br>
If you are writing an application that sends messages which may subsequently require conversion, this is what you need to do to ensure that they can be converted successfully.
<br><br><br>


<FONT SIZE="+2">Summary 2 of 2</FONT>
<br>
If you are writing an application that is retrieving messages that may require conversion, this is what you need to do to ensure that they can be converted successfully.
<br><br><br>



</font>
</body>
</html>
