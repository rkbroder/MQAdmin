<!doctype html public "-//W3C//DTD HTML 4.0//EN">
<html>
<head><title>Topic 5 - Queue manager architecture - Audio transcript </title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
</head>
<body bgcolor="#FFCC66">

<font face="Arial,Helvetica">

<H1>MQ84 - Topic 5: Queue manager architecture</h1>

<FONT SIZE="+2">Functional View </FONT>
<br>
The typical queue manager is divided into three functional areas.
One area provides the application interface, another the low level functionality required by components, and the last  the management of the physical environment.
<P>
Roll the mouse over each item for a description, then click Next to continue.
<br><br><br>

<FONT SIZE="+2">Physical view</FONT>
<br>
The physical queue manager is implemented as a series of components.
<P>
The execution controller is started first and manages the availability of all the other components.
<P>
A local agent component is created by the execution controller for each connection request received.
<P>
The names shown for each of the components are as implemented on the UNIX, OS/2 and Windows NT platforms.
<P>
Roll the mouse over the objects for a description.
<br><br><br>


<FONT SIZE="+2">Directory structure</FONT>
<br>
During installation the MQSeries product libraries are selected and created, if required.
Queue managers are implemented as file structures. The naming of components of the structure is fixed but the base location for the structure is customizable, if the platform supports it.
<P>
When a queue manager is deleted all objects that are associated with the named queue manager will also be deleted.
<P>
Click each the platforms of interest for further information and instructions.
<br><br><br>


<FONT SIZE="+2">The MQSeries configuration files</FONT>
<br>
Until version 5.1, MQSeries collects all information regarding the product and the defined queue managers into an MQSeries configuration file.
<P>
When a new queue manager is created, a queue manager configuration file keeps all the values used by its customization.
<P>
MQSeries for Windows NT uses the MQSeries Services snap-in to make changes to attribute information within the Windows NT Registry.
<P>
Click on the items of interest for further information, then click Next to continue.
<br><br><br>


<FONT SIZE="+2">Adminstration on MQSeries for Window NT Vers. 5.1 </FONT>
<br>
In MQSeries version 5.1, the configuration files mqs.ini and qm.ini are no longer used; all the MQSeries configuration information is stored in the Windows NT Registry. There should be a simple, or close, correlation between the contents of the Windows NT Registry and the MQSeries configuration files.
<P>
To customize a queue manager creation, you can edit configuration information from the MQSeries Services snap-in.
<P>
Do not attempt to edit the registry system file directly as this may cause your system to behave unpredictably and adversely affect the smooth running of both your MQSeries system and your Windows NT operating system.
<br><br><br>


<FONT SIZE="+2">The queue manager configuration file</FONT>
<br>
A queue manager configuration file, qm.ini, contains information relevant to a specific queue manager and there is one queue manager configuration file for each queue manager.
<P>
The qm.ini file is automatically created in the root of the directory tree occupied by the queue manager when the queue manager with which it is associated is created.
<br><br><br>


<FONT SIZE="+2">Configuration information for MQSeries for Windows and OS/2Warp </FONT>
<br>
The MQSeries configuration file contains information relevant to all the queue managers on the node. It is created automatically during the installation process and is used to locate the data associated with each queue manager.
<P>
When installing MQSeries, you can specify two target directories: one for programs and one for data. The configuration file is stored in the data directory.
<br><br><br>


<FONT SIZE="+2">Configuration file for UNIX platforms  </FONT>
<br>
The MQSeries configuration file contains information relevant to all the queue managers on the node. It is created automatically during installation process and is used to locate the data associated with each queue manager.
<P>
When installing MQSeries, you can specify two target directories: one for programs and one for data. The configuration file is stored in the data directory.
The default mqm directory for MQSeries for UNIX systems can be found at /var/mqm.
<br><br><br>


<FONT SIZE="+2">Configuration file in MQSeries for Digital OpenVMS</FONT>
<br>
The MQSeries configuration file contains information relevant to all the queue managers on the node. It is created automatically during installation process and is used to locate the data associated with each queue manager.
<br><br><br>


<FONT SIZE="+2">Configuration information in MQSeries for Tandem NonStop Kernel   </FONT>
<br>
The MQSeries configuration file contains information relevant to all the queue managers on the node. It is created automatically during the installation process and is used to locate the data associated with each queue manager.
<br><br><br>


<FONT SIZE="+2">Installable services</FONT>
<br>
The MQSeries product provides installable services that are more extensive than exits. An implementation of an installable service is called a service component. You can use the components supplied with the MQSeries product, or you can write your own component to perform the functions that you require.
<P>
The installable services provided with MQSeries products are the
Authorization service, the Name service and the User identifier service.
<P>
Click each of the installable services for further information, then Click Next to continue.
<br><br><br>



<FONT SIZE="+2">The Name service</FONT>
<br>
The name service enables the sharing of queues by allowing applications to identify remote queues as though they were local queues.
<P>
It uses the Open Software Foundation Distributed Computing Environment.  You can also write your own name service component if you do not have DCE installed. By default, the name service is inactive .
<br><br><br>


<FONT SIZE="+2">Authorisation service</FONT>
<br>
The authorization service is the security facility.
<P>
The default service component that implements this service is the Object Authority Manager. It is supplied with the listed MQSeries products.
<P>
By default, the OAM is active and configured.
<P>
The authorization service can be changed to relate to another application for the verification of object related security.
<br><br><br>


<FONT SIZE="+2">User Identity Service</FONT>
<br>
The user identifier service is supported by MQSeries for OS/2 Warp only. It allows MQI applications to associate a user ID with MQSeries messages. The receiving applications are then able to identify the source of the messages.
<P>
Note that this is not intended to provide a secure service.
<br><br><br>



</font>
</body>
</html>
